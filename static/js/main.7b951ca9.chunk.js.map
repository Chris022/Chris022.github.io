{"version":3,"sources":["App.js","Main.js","index.js"],"names":["axios","require","default","App","props","React","useState","json","setJson","events","setEvents","useEffect","teacher","get","then","res","data","selectedTeacher","timetables","tree","monday","tuesday","wednesday","thursday","friday","Object","keys","forEach","lesson","num","getDay","parseISO","push","id","name","type","startTime","moment","endTime","jsonConverter","renderHour","hour","defaultAttributes","styles","key","renderEvent","event","title","className","event_info","style","color","format","hoursInterval","timeLabel","Main","value","setValue","TextField","label","variant","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAOMA,EAAQC,EAAQ,IAASC,QAEhB,SAASC,EAAIC,GAAO,IAAD,EAEXC,IAAMC,SAAS,IAFJ,mBAE3BC,EAF2B,KAEtBC,EAFsB,OAoEPH,IAAMC,SAAS,IApER,mBAoE3BG,EApE2B,KAoEpBC,EApEoB,KA8EhC,OARAC,qBAAU,WAlES,IAACC,IAmELR,EAAMQ,QAlEnBZ,EAAMa,IAAI,mDAAmDD,GAC1DE,MAAK,SAACC,GACLP,EAAQO,EAAIC,WAiEhB,CAACZ,EAAMQ,UAETD,qBAAU,WACRD,EAhEkB,SAACO,GACnB,IAAIC,EAAaX,EAMbY,EAAO,CACGC,OAAO,GACPC,QAAQ,GACRC,UAAU,GACVC,SAAS,GACTC,OAAO,IAgBrB,OAbAC,OAAOC,KAAKR,GAAYS,SAAQ,SAAAf,GAC3BK,IAAoBL,GACrBM,EAAWN,GAASe,SAAQ,SAAAC,GAfhB,IAACC,EAgBXV,GAhBWU,EAgBIC,YAAOC,YAASH,EAAM,OAf7B,CAAC,SAAS,UAAU,YAAY,WAAW,UAC1CC,EAAI,KAcqCG,KAAK,CACrDC,GALM,EAMNC,KAAKN,EAAM,MACXO,KAAK,SACLC,UAAWC,IAAOT,EAAM,KAAS,IAAIA,EAAM,WAC3CU,QAASD,IAAOT,EAAM,KAAS,IAAIA,EAAM,iBAK1CT,EAoCGoB,CAAcnC,EAAMQ,YAC9B,CAACL,IAGC,6BACE,kBAAC,IAAD,CACEE,OAAQA,EACR+B,WAvCS,SAACC,EAAMC,EAAmBC,GACzC,OACE,yCAASD,EAAT,CACKE,IAAKH,IACPA,EAFH,MAsCII,YA/BU,SAACC,EAAOJ,EAAmBC,GAC3C,OACE,yCAASD,EAAT,CACKK,MAAOD,EAAMZ,KACbU,IAAKE,EAAMb,KACd,0BAAMe,UAAWL,EAAOM,WAAYC,MAAO,CAAEC,MAAO,UAChDL,EAAMZ,MAEV,0BAAMc,UAAWL,EAAOM,WAAYC,MAAO,CAAEC,MAAO,UAChDL,EAAMV,UAAUgB,OAAO,SAD3B,MAC0CN,EAAMR,QAAQc,OAAO,YAuB7DC,cAAe,CAAE,EAAG,IACpBC,UAAU,aCzFL,SAASC,IAAO,IAAD,EACAlD,IAAMC,SAAS,QADf,mBACnBkD,EADmB,KACZC,EADY,KAG1B,OAAO,oCACP,kBAACC,EAAA,EAAD,CAAWzB,GAAG,iBAAiB0B,MAAM,iBAAcC,QAAQ,WAAWJ,MAAOA,EAAOK,SAAU,SAACf,GAAD,OAAWW,EAASX,EAAMgB,OAAON,UADxH,IAGH,kBAACrD,EAAD,CAAKS,QAAS4C,KCJtBO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACV,EAAD,OAEFW,SAASC,eAAe,W","file":"static/js/main.7b951ca9.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport moment from 'moment';\n\nimport TimeTable from 'react-timetable-events'\nimport getDay from 'date-fns/getDay'\nimport parseISO from 'date-fns/parseISO'\n\nconst axios = require('axios').default;\n\nexport default function App(props){\n\n  let [json,setJson] = React.useState({});\n\n  let getTimeTable = (teacher) => {\n    axios.get('http://localhost:3001/teacherTimeTable?teachers='+teacher)\n      .then((res) => {\n        setJson(res.data);\n      });\n  }\n\n  let jsonConverter = (selectedTeacher) => {\n    var timetables = json;\n    let numToName = (num) => {\n        var arr = [\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\"];\n        return arr[num-1];\n    }\n\n    var tree = {\n                  monday:[],\n                  tuesday:[],\n                  wednesday:[],\n                  thursday:[],\n                  friday:[]\n                };\n    var counter = 1;\n    Object.keys(timetables).forEach(teacher => {\n      if(selectedTeacher === teacher){\n        timetables[teacher].forEach(lesson => {\n          tree[numToName(getDay(parseISO(lesson[\"date\"])))].push({\n            id:counter,\n            name:lesson[\"class\"],\n            type:'custom',\n            startTime: moment(lesson[\"date\"]+\"T\"+lesson[\"startTime\"]),\n            endTime: moment(lesson[\"date\"]+\"T\"+lesson[\"endTime\"])\n          });\n        })\n      }\n    })\n    return tree;\n  }\n  \n\n  let renderHour = (hour, defaultAttributes, styles) => {\n    return (\n      <div {...defaultAttributes}\n           key={hour}>\n        {hour}h\n      </div>\n    );\n  }\n\n  let renderEvent = (event, defaultAttributes, styles) => {\n    return (\n      <div {...defaultAttributes}\n           title={event.name}\n           key={event.id}>\n        <span className={styles.event_info} style={{ color: 'black' }}>\n          { event.name }\n        </span>\n        <span className={styles.event_info} style={{ color: 'black' }}>\n          { event.startTime.format('HH:mm') } - { event.endTime.format('HH:mm') }\n        </span>\n      </div>\n    )\n  }\n\n\n  let [events,setEvents] = React.useState([]);\n\n  useEffect(()=>{\n    getTimeTable(props.teacher);\n  },[props.teacher])\n\n  useEffect(() => {\n    setEvents(jsonConverter(props.teacher));\n  },[json])\n\n  return (\n      <div>\n        <TimeTable\n          events={events}\n          renderHour={renderHour}\n          renderEvent={renderEvent}\n          hoursInterval={[ 7, 20 ]}\n          timeLabel=\"Time :)\"\n        />\n      </div>\n  )\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport App from './App';\n\nexport default function Main(){\n    const [value, setValue] = React.useState(\"WENA\");  \n  \n    return <>\n    <TextField id=\"outlined-basic\" label=\"LeherkÃ¼rzel\" variant=\"outlined\" value={value} onChange={(event) => setValue(event.target.value)}/>,\n        \n        <App teacher={value}/>\n      </>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport Main from './Main';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}